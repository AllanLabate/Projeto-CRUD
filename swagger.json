{
  "openapi": "3.0.0",
  "info": {
    "title": "API CodeWear",
    "description": "API para projeto CRUD",
    "termsOfService": "",
    "contact": {
      "email": "allan.labate1@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/clothes",
      "description": "API DE TESTE"
    },
    {
      "url": "https://crud-codewear.herokuapp.com/clothes/all-clothes",
      "description": "API DE PRODUÃ‡AO"
    }
  ],
  "paths": {
    "/all-clothes": {
      "get": {
        "summary": "List of all clothes",
        "description": "This rout is responsible to show all clothes registered",
        "tags": ["clothes"],
        "responses": {
          "404": {
            "description": "not found"
          },
          "200": {
            "description": "ok",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clothes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/one-clothes/{id}": {
      "get": {
        "summary": "search clothes by ID",
        "description": "This route is responsible to search clothes by ID",
        "tags": ["clothes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "clothes id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/clothes"
                }
              }
            }
          }
        }
      }
    },
    "/create-clothes": {
      "post": {
        "summary": "Create new clothes",
        "description": "This route is responsible to create a new clothes",
        "tags": ["clothes"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clothes"
              },
              "examples": {
                "clothes": {
                  "value": {
                    "tipo": "T-shirt",
                    "tecido": "Cottom",
                    "descricao": "Quam vulputate dignissim suspendisse in est ante in nibh mauris.",
                    "foto": "Image",
                    "preco": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/clothes"
                }
              }
            }
          }
        }
      }
    },
    "/update-clothes/{id}": {
      "put": {
        "summary": "Edit Clothes by ID",
        "description": "This route is responsible to update/edit clothes bt ID",
        "tags": ["clothes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id clothes to search",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clothes"
              },
              "examples": {
                "clothes": {
                  "value": {
                    "tipo": "boots",
                    "tecido": "leather",
                    "descricao": "Quam vulputate dignissim suspendisse in est ante in nibh mauris.",
                    "foto": "imagem",
                    "preco": 7
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/clothes"
                }
              }
            }
          }
        }
      }
    },
    "/delete-clothes/{id}": {
      "delete": {
        "summary": "Delete clothes",
        "description": "This route is responsible to delete clothes by ID",
        "tags": ["clothes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "clothes ID by delete",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Clothes": {
        "type": "object",
        "properties": {
          "tipo": {
            "type": "string"
          },
          "tecido": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "foto": {
            "type": "string"
          },
          "preco": {
            "type": "number"
          }
        }
      }
    }
  }
}
